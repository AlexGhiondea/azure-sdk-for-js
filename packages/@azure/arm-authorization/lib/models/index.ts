/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing RoleDefinitionFilter.
 * Role Definitions filter
 *
 */
export interface RoleDefinitionFilter {
  /**
   * @member {string} [roleName] Returns role definition with the specific
   * name.
   */
  roleName?: string;
}

/**
 * @interface
 * An interface representing Permission.
 * Role definition permissions.
 *
 */
export interface Permission {
  /**
   * @member {string[]} [actions] Allowed actions.
   */
  actions?: string[];
  /**
   * @member {string[]} [notActions] Denied actions.
   */
  notActions?: string[];
}

/**
 * @interface
 * An interface representing ProviderOperation.
 * Operation
 *
 */
export interface ProviderOperation {
  /**
   * @member {string} [name] The operation name.
   */
  name?: string;
  /**
   * @member {string} [displayName] The operation display name.
   */
  displayName?: string;
  /**
   * @member {string} [description] The operation description.
   */
  description?: string;
  /**
   * @member {string} [origin] The operation origin.
   */
  origin?: string;
  /**
   * @member {any} [properties] The operation properties.
   */
  properties?: any;
}

/**
 * @interface
 * An interface representing ResourceType.
 * Resource Type
 *
 */
export interface ResourceType {
  /**
   * @member {string} [name] The resource type name.
   */
  name?: string;
  /**
   * @member {string} [displayName] The resource type display name.
   */
  displayName?: string;
  /**
   * @member {ProviderOperation[]} [operations] The resource type operations.
   */
  operations?: ProviderOperation[];
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadata.
 * Provider Operations metadata
 *
 */
export interface ProviderOperationsMetadata {
  /**
   * @member {string} [id] The provider id.
   */
  id?: string;
  /**
   * @member {string} [name] The provider name.
   */
  name?: string;
  /**
   * @member {string} [type] The provider type.
   */
  type?: string;
  /**
   * @member {string} [displayName] The provider display name.
   */
  displayName?: string;
  /**
   * @member {ResourceType[]} [resourceTypes] The provider resource types
   */
  resourceTypes?: ResourceType[];
  /**
   * @member {ProviderOperation[]} [operations] The provider operations.
   */
  operations?: ProviderOperation[];
}

/**
 * @interface
 * An interface representing RoleDefinition.
 * Role definition.
 *
 */
export interface RoleDefinition {
  /**
   * @member {string} [id] The role definition ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The role definition name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The role definition type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [roleName] The role name.
   */
  roleName?: string;
  /**
   * @member {string} [description] The role definition description.
   */
  description?: string;
  /**
   * @member {string} [roleType] The role type.
   */
  roleType?: string;
  /**
   * @member {Permission[]} [permissions] Role definition permissions.
   */
  permissions?: Permission[];
  /**
   * @member {string[]} [assignableScopes] Role definition assignable scopes.
   */
  assignableScopes?: string[];
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadataGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderOperationsMetadataGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specifies whether to expand the values. Default
   * value: 'resourceTypes' .
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadataListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderOperationsMetadataListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specifies whether to expand the values. Default
   * value: 'resourceTypes' .
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing RoleDefinitionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleDefinitionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * atScopeAndBelow filter to search below the given scope as well.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AuthorizationManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface AuthorizationManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the PermissionGetResult.
 * Permissions information.
 *
 * @extends Array<Permission>
 */
export interface PermissionGetResult extends Array<Permission> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProviderOperationsMetadataListResult.
 * Provider operations metadata list
 *
 * @extends Array<ProviderOperationsMetadata>
 */
export interface ProviderOperationsMetadataListResult extends Array<ProviderOperationsMetadata> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoleDefinitionListResult.
 * Role definition list operation result.
 *
 * @extends Array<RoleDefinition>
 */
export interface RoleDefinitionListResult extends Array<RoleDefinition> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type PermissionsListForResourceGroupResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type PermissionsListForResourceResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type PermissionsListForResourceGroupNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type PermissionsListForResourceNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProviderOperationsMetadataGetResponse = ProviderOperationsMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadata;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProviderOperationsMetadataListResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProviderOperationsMetadataListNextResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleDefinitionsDeleteMethodResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleDefinitionsGetResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RoleDefinitionsCreateOrUpdateResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleDefinitionsGetByIdResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleDefinitionsListResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleDefinitionsListNextResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

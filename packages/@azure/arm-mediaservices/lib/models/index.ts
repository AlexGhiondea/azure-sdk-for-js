/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ApiEndpoint.
 * The properties for a Media Services REST API endpoint.
 *
 */
export interface ApiEndpoint {
  /**
   * @member {string} [endpoint] The Media Services REST endpoint.
   */
  endpoint?: string;
  /**
   * @member {string} [majorVersion] The version of Media Services REST API.
   */
  majorVersion?: string;
}

/**
 * @interface
 * An interface representing ApiError.
 * The error returned from a failed Media Services REST API call.
 *
 */
export interface ApiError {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityInput.
 * The request body for CheckNameAvailability API.
 *
 */
export interface CheckNameAvailabilityInput {
  /**
   * @member {string} name The name of the resource. A name must be globally
   * unique.
   */
  name: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityOutput.
 * The response body for CheckNameAvailability API.
 *
 */
export interface CheckNameAvailabilityOutput {
  /**
   * @member {boolean} [nameAvailable] Specifies if the name is available.
   */
  nameAvailable?: boolean;
  /**
   * @member {EntityNameUnavailabilityReason} [reason] Specifies the reason if
   * the name is not available. Possible values include: 'None', 'Invalid',
   * 'AlreadyExists'
   */
  reason?: EntityNameUnavailabilityReason;
  /**
   * @member {string} [message] Specifies the detailed reason if the name is
   * not available.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing StorageAccount.
 * The properties of a storage account associated with this resource.
 *
 */
export interface StorageAccount {
  /**
   * @member {string} id The id of the storage account resource. Media Services
   * relies on tables and queues as well as blobs, so the primary storage
   * account must be a Standard Storage account (either
   * Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts
   * can be added as secondary storage accounts (isPrimary false).
   */
  id: string;
  /**
   * @member {boolean} isPrimary Is this storage account resource the primary
   * storage account for the Media Service resource. Blob only storage must set
   * this to false.
   */
  isPrimary: boolean;
}

/**
 * @interface
 * An interface representing Resource.
 * The Azure Resource Manager resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The id of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] The geographic location of the resource. This
   * must be one of the supported and registered Azure Geo Regions (for
   * example, West US, East US, Southeast Asia, and so forth).
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Tags to help
   * categorize the resource in the Azure portal.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing MediaService.
 * The properties of a Media Service resource.
 *
 * @extends Resource
 */
export interface MediaService extends Resource {
  /**
   * @member {ApiEndpoint[]} [apiEndpoints] Read-only property that lists the
   * Media Services REST API endpoints for this resource. If supplied on a PUT
   * or PATCH, the value will be ignored.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiEndpoints?: ApiEndpoint[];
  /**
   * @member {StorageAccount[]} [storageAccounts] The storage accounts for this
   * resource.
   */
  storageAccounts?: StorageAccount[];
}

/**
 * @interface
 * An interface representing RegenerateKeyInput.
 * The request body for a RegenerateKey API.
 *
 */
export interface RegenerateKeyInput {
  /**
   * @member {KeyType} keyType The keyType indicating which key you want to
   * regenerate, Primary or Secondary. Possible values include: 'Primary',
   * 'Secondary'
   */
  keyType: KeyType;
}

/**
 * @interface
 * An interface representing RegenerateKeyOutput.
 * The response body for a RegenerateKey API.
 *
 */
export interface RegenerateKeyOutput {
  /**
   * @member {string} [key] The new value of either the primary or secondary
   * key.
   */
  key?: string;
}

/**
 * @interface
 * An interface representing ServiceKeys.
 * The response body for a ListKeys API.
 *
 */
export interface ServiceKeys {
  /**
   * @member {string} [primaryAuthEndpoint] The primary authorization endpoint.
   */
  primaryAuthEndpoint?: string;
  /**
   * @member {string} [secondaryAuthEndpoint] The secondary authorization
   * endpoint.
   */
  secondaryAuthEndpoint?: string;
  /**
   * @member {string} [primaryKey] The primary key for the Media Service
   * resource.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] The secondary key for the Media Service
   * resource.
   */
  secondaryKey?: string;
  /**
   * @member {string} [scope] The authorization scope.
   */
  scope?: string;
}

/**
 * @interface
 * An interface representing SyncStorageKeysInput.
 * The request  body for a SyncStorageKeys API.
 *
 */
export interface SyncStorageKeysInput {
  /**
   * @member {string} id The id of the storage account resource.
   */
  id: string;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.Media
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * A Media Services REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing OperationListResult.
 * Result of the request to list Media Services operations.
 *
 */
export interface OperationListResult {
  /**
   * @member {Operation[]} [value] List of Media Services operations supported
   * by the Microsoft.Media resource provider.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: Operation[];
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing MediaServicesManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface MediaServicesManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the MediaServiceCollection.
 * The collection of Media Service resources.
 *
 * @extends Array<MediaService>
 */
export interface MediaServiceCollection extends Array<MediaService> {
}

/**
 * Defines values for ResourceType.
 * Possible values include: 'mediaservices'
 * @readonly
 * @enum {string}
 */
export type ResourceType = 'mediaservices';

/**
 * Defines values for EntityNameUnavailabilityReason.
 * Possible values include: 'None', 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type EntityNameUnavailabilityReason = 'None' | 'Invalid' | 'AlreadyExists';

/**
 * Defines values for KeyType.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type KeyType = 'Primary' | 'Secondary';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type MediaServiceCheckNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MediaServiceListByResourceGroupResponse = MediaServiceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MediaServiceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MediaServiceGetResponse = MediaService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MediaService;
    };
};

/**
 * Contains response data for the create operation.
 */
export type MediaServiceCreateResponse = MediaService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MediaService;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MediaServiceUpdateResponse = MediaService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MediaService;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type MediaServiceRegenerateKeyResponse = RegenerateKeyOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegenerateKeyOutput;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type MediaServiceListKeysResponse = ServiceKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceKeys;
    };
};

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/iotSecurityGroupsMappers";
import * as Parameters from "../models/parameters";
import { SecurityCenterContext } from "../securityCenterContext";

/** Class representing a IotSecurityGroups. */
export class IotSecurityGroups {
  private readonly client: SecurityCenterContext;

  /**
   * Create a IotSecurityGroups.
   * @param {SecurityCenterContext} client Reference to the service client.
   */
  constructor(client: SecurityCenterContext) {
    this.client = client;
  }

  /**
   * Gets the list of security groups for the specified IoT hub resource.
   * @param resourceId The identifier of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.IotSecurityGroupsListResponse>
   */
  list(resourceId: string, options?: msRest.RequestOptionsBase): Promise<Models.IotSecurityGroupsListResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param callback The callback
   */
  list(resourceId: string, callback: msRest.ServiceCallback<Models.IotSecurityGroupList>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotSecurityGroupList>): void;
  list(resourceId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotSecurityGroupList>, callback?: msRest.ServiceCallback<Models.IotSecurityGroupList>): Promise<Models.IotSecurityGroupsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.IotSecurityGroupsListResponse>;
  }

  /**
   * Gets the security group for the specified IoT hub resource.
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.IotSecurityGroupsGetResponse>
   */
  get(resourceId: string, iotSecurityGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotSecurityGroupsGetResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param callback The callback
   */
  get(resourceId: string, iotSecurityGroupName: string, callback: msRest.ServiceCallback<Models.IotSecurityGroup>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceId: string, iotSecurityGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotSecurityGroup>): void;
  get(resourceId: string, iotSecurityGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotSecurityGroup>, callback?: msRest.ServiceCallback<Models.IotSecurityGroup>): Promise<Models.IotSecurityGroupsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        iotSecurityGroupName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.IotSecurityGroupsGetResponse>;
  }

  /**
   * Creates or updates the security group on a specified IoT hub resource.
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param iotSecurityGroup Security group object.
   * @param [options] The optional parameters
   * @returns Promise<Models.IotSecurityGroupsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceId: string, iotSecurityGroupName: string, iotSecurityGroup: Models.IotSecurityGroup, options?: msRest.RequestOptionsBase): Promise<Models.IotSecurityGroupsCreateOrUpdateResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param iotSecurityGroup Security group object.
   * @param callback The callback
   */
  createOrUpdate(resourceId: string, iotSecurityGroupName: string, iotSecurityGroup: Models.IotSecurityGroup, callback: msRest.ServiceCallback<Models.IotSecurityGroup>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param iotSecurityGroup Security group object.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceId: string, iotSecurityGroupName: string, iotSecurityGroup: Models.IotSecurityGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotSecurityGroup>): void;
  createOrUpdate(resourceId: string, iotSecurityGroupName: string, iotSecurityGroup: Models.IotSecurityGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotSecurityGroup>, callback?: msRest.ServiceCallback<Models.IotSecurityGroup>): Promise<Models.IotSecurityGroupsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        iotSecurityGroupName,
        iotSecurityGroup,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.IotSecurityGroupsCreateOrUpdateResponse>;
  }

  /**
   * Deletes the security group
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceId: string, iotSecurityGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param callback The callback
   */
  deleteMethod(resourceId: string, iotSecurityGroupName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param iotSecurityGroupName The name of the security group. Please notice that the name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceId: string, iotSecurityGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceId: string, iotSecurityGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        iotSecurityGroupName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{resourceId}/providers/Microsoft.Security/iotSecurityGroups",
  urlParameters: [
    Parameters.resourceId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.IotSecurityGroupList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{resourceId}/providers/Microsoft.Security/iotSecurityGroups/{iotSecurityGroupName}",
  urlParameters: [
    Parameters.resourceId,
    Parameters.iotSecurityGroupName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.IotSecurityGroup
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "{resourceId}/providers/Microsoft.Security/iotSecurityGroups/{iotSecurityGroupName}",
  urlParameters: [
    Parameters.resourceId,
    Parameters.iotSecurityGroupName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "iotSecurityGroup",
    mapper: {
      ...Mappers.IotSecurityGroup,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.IotSecurityGroup
    },
    201: {
      bodyMapper: Mappers.IotSecurityGroup
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "{resourceId}/providers/Microsoft.Security/iotSecurityGroups/{iotSecurityGroupName}",
  urlParameters: [
    Parameters.resourceId,
    Parameters.iotSecurityGroupName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing OperationDisplay.
 * Display name of operation
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] The resource provider name:
   * Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * @member {string} [resource] The resource on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] The operation that users can perform.
   */
  operation?: string;
  /**
   * @member {string} [description] The description for the operation.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Azure Machine Learning workspace REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing Resource.
 * Azure Resource Manager resource envelope.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Specifies the resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Specifies the name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {Identity} [identity] The identity of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly identity?: Identity;
  /**
   * @member {string} [location] Specifies the location of the resource.
   */
  location?: string;
  /**
   * @member {string} [type] Specifies the type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Contains resource tags
   * defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Workspace.
 * An object that represents a machine learning workspace.
 *
 * @extends Resource
 */
export interface Workspace extends Resource {
  /**
   * @member {string} [workspaceId] The immutable id associated with this
   * workspace.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly workspaceId?: string;
  /**
   * @member {string} [description] The description of this workspace.
   */
  description?: string;
  /**
   * @member {string} [friendlyName] The friendly name for this workspace. This
   * name in mutable
   */
  friendlyName?: string;
  /**
   * @member {Date} [creationTime] The creation time of the machine learning
   * workspace in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationTime?: Date;
  /**
   * @member {string} [keyVault] ARM id of the key vault associated with this
   * workspace. This cannot be changed once the workspace has been created
   */
  keyVault?: string;
  /**
   * @member {string} [applicationInsights] ARM id of the application insights
   * associated with this workspace. This cannot be changed once the workspace
   * has been created
   */
  applicationInsights?: string;
  /**
   * @member {string} [containerRegistry] ARM id of the container registry
   * associated with this workspace. This cannot be changed once the workspace
   * has been created
   */
  containerRegistry?: string;
  /**
   * @member {string} [storageAccount] ARM id of the storage account associated
   * with this workspace. This cannot be changed once the workspace has been
   * created
   */
  storageAccount?: string;
  /**
   * @member {string} [discoveryUrl] Url for the discovery service to identify
   * regional endpoints for machine learning experimentation services
   */
  discoveryUrl?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The current deployment
   * state of workspace resource. The provisioningState is to indicate states
   * for resource provisioning. Possible values include: 'Unknown', 'Updating',
   * 'Creating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * @interface
 * An interface representing WorkspaceUpdateParameters.
 * The parameters for updating a machine learning workspace.
 *
 */
export interface WorkspaceUpdateParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags for
   * the machine learning workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [description] The description of this workspace.
   */
  description?: string;
  /**
   * @member {string} [friendlyName] The friendly name for this workspace.
   */
  friendlyName?: string;
}

/**
 * @interface
 * An interface representing UsageName.
 * The Usage Names.
 *
 */
export interface UsageName {
  /**
   * @member {string} [value] The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
  /**
   * @member {string} [localizedValue] The localized name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly localizedValue?: string;
}

/**
 * @interface
 * An interface representing Usage.
 * Describes AML Resource Usage.
 *
 */
export interface Usage {
  /**
   * @member {UsageUnit} [unit] An enum describing the unit of usage
   * measurement. Possible values include: 'Count'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: UsageUnit;
  /**
   * @member {number} [currentValue] The current usage of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] The maximum permitted usage of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {UsageName} [name] The name of the type of usage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: UsageName;
}

/**
 * @interface
 * An interface representing VirtualMachineSize.
 * Describes the properties of a VM size.
 *
 */
export interface VirtualMachineSize {
  /**
   * @member {string} [name] Virtual Machine size name. The name of the virtual
   * machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [family] Virtual Machine family name. The family name of
   * the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly family?: string;
  /**
   * @member {number} [vCPUs] Number of vPUs. The number of vCPUs supported by
   * the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vCPUs?: number;
  /**
   * @member {number} [osVhdSizeMB] OS VHD Disk size. The OS VHD disk size, in
   * MB, allowed by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly osVhdSizeMB?: number;
  /**
   * @member {number} [maxResourceVolumeMB] Resource volume size. The resource
   * volume size, in MB, allowed by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxResourceVolumeMB?: number;
  /**
   * @member {number} [memoryGB] Memory size. The amount of memory, in GB,
   * supported by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly memoryGB?: number;
  /**
   * @member {boolean} [lowPriorityCapable] Low priority capable. Specifies if
   * the virtual machine size supports low priority VMs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lowPriorityCapable?: boolean;
  /**
   * @member {boolean} [premiumIO] Premium IO supported. Specifies if the
   * virtual machine size supports premium IO.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly premiumIO?: boolean;
}

/**
 * @interface
 * An interface representing Identity.
 * Identity for the resource.
 *
 */
export interface Identity {
  /**
   * @member {string} [principalId] The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string} [tenantId] The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
  /**
   * @member {ResourceIdentityType} [type] The identity type. Possible values
   * include: 'SystemAssigned'
   */
  type?: ResourceIdentityType;
}

/**
 * @interface
 * An interface representing ResourceId.
 * Represents a resource ID. For example, for a subnet, it is the resource URL
 * for the subnet.
 *
 * @extends BaseResource
 */
export interface ResourceId extends BaseResource {
  /**
   * @member {string} id The ID of the resource
   */
  id: string;
}

/**
 * @interface
 * An interface representing Password.
 */
export interface Password {
  /**
   * @member {string} [name] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [value] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * @interface
 * An interface representing RegistryListCredentialsResult.
 */
export interface RegistryListCredentialsResult {
  /**
   * @member {string} [location] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [username] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly username?: string;
  /**
   * @member {Password[]} [passwords]
   */
  passwords?: Password[];
}

/**
 * @interface
 * An interface representing ListWorkspaceKeysResult.
 */
export interface ListWorkspaceKeysResult {
  /**
   * @member {string} [userStorageKey] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly userStorageKey?: string;
  /**
   * @member {string} [userStorageResourceId] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly userStorageResourceId?: string;
  /**
   * @member {string} [appInsightsInstrumentationKey] **NOTE: This property
   * will not be serialized. It can only be populated by the server.**
   */
  readonly appInsightsInstrumentationKey?: string;
  /**
   * @member {RegistryListCredentialsResult} [containerRegistryCredentials]
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly containerRegistryCredentials?: RegistryListCredentialsResult;
}

/**
 * @interface
 * An interface representing ErrorDetail.
 * Error detail information.
 *
 */
export interface ErrorDetail {
  /**
   * @member {string} code Error code.
   */
  code: string;
  /**
   * @member {string} message Error message.
   */
  message: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response information.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {ErrorDetail[]} [details] An array of error detail objects.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly details?: ErrorDetail[];
}

/**
 * @interface
 * An interface representing MachineLearningServiceError.
 * Wrapper for error response to follow ARM guidelines.
 *
 */
export interface MachineLearningServiceError {
  /**
   * @member {ErrorResponse} [error] The error response.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: ErrorResponse;
}

/**
 * Contains the possible cases for Compute.
 */
export type ComputeUnion = Compute | AKS | AmlCompute | VirtualMachine | HDInsight | DataFactory | Databricks | DataLakeAnalytics;

/**
 * @interface
 * An interface representing Compute.
 * Machine Learning compute object.
 *
 */
export interface Compute {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "Compute";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
}

/**
 * @interface
 * An interface representing ComputeResource.
 * Machine Learning compute object wrapped into ARM resource envelope.
 *
 * @extends Resource
 */
export interface ComputeResource extends Resource {
  /**
   * @member {ComputeUnion} [properties] Compute properties
   */
  properties?: ComputeUnion;
}

/**
 * @interface
 * An interface representing SystemService.
 * A system service running on a compute.
 *
 */
export interface SystemService {
  /**
   * @member {string} [systemServiceType] The type of this system service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly systemServiceType?: string;
  /**
   * @member {string} [publicIpAddress] Public IP address
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicIpAddress?: string;
  /**
   * @member {string} [version] The version for this type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: string;
}

/**
 * @interface
 * An interface representing SslConfiguration.
 * The ssl configuration for scoring
 *
 */
export interface SslConfiguration {
  /**
   * @member {Status} [status] Enable or disable ssl for scoring. Possible
   * values include: 'Disabled', 'Enabled'
   */
  status?: Status;
  /**
   * @member {string} [cert] Cert data
   */
  cert?: string;
  /**
   * @member {string} [key] Key data
   */
  key?: string;
  /**
   * @member {string} [cname] CNAME of the cert
   */
  cname?: string;
}

/**
 * @interface
 * An interface representing AksNetworkingConfiguration.
 * Advance configuration for AKS networking
 *
 */
export interface AksNetworkingConfiguration {
  /**
   * @member {string} [subnetId] Virtual network subnet resource ID the compute
   * nodes belong to
   */
  subnetId?: string;
  /**
   * @member {string} [serviceCidr] A CIDR notation IP range from which to
   * assign service cluster IPs. It must not overlap with any Subnet IP ranges.
   */
  serviceCidr?: string;
  /**
   * @member {string} [dnsServiceIP] An IP address assigned to the Kubernetes
   * DNS service. It must be within the Kubernetes service address range
   * specified in serviceCidr.
   */
  dnsServiceIP?: string;
  /**
   * @member {string} [dockerBridgeCidr] A CIDR notation IP range assigned to
   * the Docker bridge network. It must not overlap with any Subnet IP ranges
   * or the Kubernetes service address range.
   */
  dockerBridgeCidr?: string;
}

/**
 * @interface
 * An interface representing AKSProperties.
 * AKS properties
 *
 */
export interface AKSProperties {
  /**
   * @member {string} [clusterFqdn] Cluster full qualified domain name
   */
  clusterFqdn?: string;
  /**
   * @member {SystemService[]} [systemServices] System services
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly systemServices?: SystemService[];
  /**
   * @member {number} [agentCount] Number of agents
   */
  agentCount?: number;
  /**
   * @member {string} [agentVMSize] Agent virtual machine size
   */
  agentVMSize?: string;
  /**
   * @member {SslConfiguration} [sslConfiguration] SSL configuration
   */
  sslConfiguration?: SslConfiguration;
  /**
   * @member {AksNetworkingConfiguration} [aksNetworkingConfiguration] AKS
   * networking configuration for vnet
   */
  aksNetworkingConfiguration?: AksNetworkingConfiguration;
}

/**
 * @interface
 * An interface representing AKS.
 * A Machine Learning compute based on AKS.
 *
 */
export interface AKS {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {AKSProperties} [properties] AKS properties
   */
  properties?: AKSProperties;
}

/**
 * @interface
 * An interface representing ScaleSettings.
 * scale settings for AML Compute
 *
 */
export interface ScaleSettings {
  /**
   * @member {number} maxNodeCount Max number of nodes to use
   */
  maxNodeCount: number;
  /**
   * @member {number} [minNodeCount] Min number of nodes to use. Default value:
   * 0 .
   */
  minNodeCount?: number;
  /**
   * @member {string} [nodeIdleTimeBeforeScaleDown] Node Idle Time before
   * scaling down amlCompute
   */
  nodeIdleTimeBeforeScaleDown?: string;
}

/**
 * @interface
 * An interface representing UserAccountCredentials.
 * Settings for user account that gets created on each on the nodes of a
 * compute.
 *
 */
export interface UserAccountCredentials {
  /**
   * @member {string} adminUserName User name. Name of the administrator user
   * account which can be used to SSH to nodes.
   */
  adminUserName: string;
  /**
   * @member {string} [adminUserSshPublicKey] SSH public key. SSH public key of
   * the administrator user account.
   */
  adminUserSshPublicKey?: string;
  /**
   * @member {string} [adminUserPassword] Password. Password of the
   * administrator user account.
   */
  adminUserPassword?: string;
}

/**
 * @interface
 * An interface representing NodeStateCounts.
 * Counts of various compute node states on the amlCompute.
 *
 */
export interface NodeStateCounts {
  /**
   * @member {number} [idleNodeCount] Idle node count. Number of compute nodes
   * in idle state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly idleNodeCount?: number;
  /**
   * @member {number} [runningNodeCount] Running node count. Number of compute
   * nodes which are running jobs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly runningNodeCount?: number;
  /**
   * @member {number} [preparingNodeCount] Preparing node count. Number of
   * compute nodes which are being prepared.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly preparingNodeCount?: number;
  /**
   * @member {number} [unusableNodeCount] Unusable node count. Number of
   * compute nodes which are in unusable state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unusableNodeCount?: number;
  /**
   * @member {number} [leavingNodeCount] Leaving node count. Number of compute
   * nodes which are leaving the amlCompute.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly leavingNodeCount?: number;
  /**
   * @member {number} [preemptedNodeCount] Preempted node count. Number of
   * compute nodes which are in preempted state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly preemptedNodeCount?: number;
}

/**
 * @interface
 * An interface representing AmlComputeProperties.
 * AML Compute properties
 *
 */
export interface AmlComputeProperties {
  /**
   * @member {string} [vmSize] Virtual Machine Size
   */
  vmSize?: string;
  /**
   * @member {VmPriority} [vmPriority] Virtual Machine priority. Possible
   * values include: 'Dedicated', 'LowPriority'
   */
  vmPriority?: VmPriority;
  /**
   * @member {ScaleSettings} [scaleSettings] Scale settings for AML Compute
   */
  scaleSettings?: ScaleSettings;
  /**
   * @member {UserAccountCredentials} [userAccountCredentials] User account
   * credentials. Credentials for an administrator user account that will be
   * created on each compute node.
   */
  userAccountCredentials?: UserAccountCredentials;
  /**
   * @member {ResourceId} [subnet] Subnet. Virtual network subnet resource ID
   * the compute nodes belong to.
   */
  subnet?: ResourceId;
  /**
   * @member {AllocationState} [allocationState] Allocation state. Allocation
   * state of the compute. Possible values are: steady - Indicates that the
   * compute is not resizing. There are no changes to the number of compute
   * nodes in the compute in progress. A compute enters this state when it is
   * created and when no operations are being performed on the compute to
   * change the number of compute nodes. resizing - Indicates that the compute
   * is resizing; that is, compute nodes are being added to or removed from the
   * compute. Possible values include: 'Steady', 'Resizing'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allocationState?: AllocationState;
  /**
   * @member {Date} [allocationStateTransitionTime] Allocation state transition
   * time. The time at which the compute entered its current allocation state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allocationStateTransitionTime?: Date;
  /**
   * @member {MachineLearningServiceError[]} [errors] Errors. Collection of
   * errors encountered by various compute nodes during node setup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errors?: MachineLearningServiceError[];
  /**
   * @member {number} [currentNodeCount] Current node count. The number of
   * compute nodes currently assigned to the compute.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentNodeCount?: number;
  /**
   * @member {number} [targetNodeCount] Target node count. The target number of
   * compute nodes for the compute. If the allocationState is resizing, this
   * property denotes the target node count for the ongoing resize operation.
   * If the allocationState is steady, this property denotes the target node
   * count for the previous resize operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetNodeCount?: number;
  /**
   * @member {NodeStateCounts} [nodeStateCounts] Node state counts. Counts of
   * various node states on the compute.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nodeStateCounts?: NodeStateCounts;
}

/**
 * @interface
 * An interface representing AmlCompute.
 * An Azure Machine Learning compute.
 *
 */
export interface AmlCompute {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "AmlCompute";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {AmlComputeProperties} [properties] AML Compute properties
   */
  properties?: AmlComputeProperties;
}

/**
 * @interface
 * An interface representing VirtualMachineSshCredentials.
 * Admin credentials for virtual machine
 *
 */
export interface VirtualMachineSshCredentials {
  /**
   * @member {string} [username] Username of admin account
   */
  username?: string;
  /**
   * @member {string} [password] Password of admin account
   */
  password?: string;
  /**
   * @member {string} [publicKeyData] Public key data
   */
  publicKeyData?: string;
  /**
   * @member {string} [privateKeyData] Private key data
   */
  privateKeyData?: string;
}

/**
 * @interface
 * An interface representing VirtualMachineProperties.
 */
export interface VirtualMachineProperties {
  /**
   * @member {string} [virtualMachineSize] Virtual Machine size
   */
  virtualMachineSize?: string;
  /**
   * @member {number} [sshPort] Port open for ssh connections.
   */
  sshPort?: number;
  /**
   * @member {string} [address] Public IP address of the virtual machine.
   */
  address?: string;
  /**
   * @member {VirtualMachineSshCredentials} [administratorAccount] Admin
   * credentials for virtual machine
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * @interface
 * An interface representing VirtualMachine.
 * A Machine Learning compute based on Azure Virtual Machines.
 *
 */
export interface VirtualMachine {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "VirtualMachine";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {VirtualMachineProperties} [properties]
   */
  properties?: VirtualMachineProperties;
}

/**
 * @interface
 * An interface representing HDInsightProperties.
 */
export interface HDInsightProperties {
  /**
   * @member {number} [sshPort] Port open for ssh connections on the master
   * node of the cluster.
   */
  sshPort?: number;
  /**
   * @member {string} [address] Public IP address of the master node of the
   * cluster.
   */
  address?: string;
  /**
   * @member {VirtualMachineSshCredentials} [administratorAccount] Admin
   * credentials for master node of the cluster
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * @interface
 * An interface representing HDInsight.
 * A HDInsight compute.
 *
 */
export interface HDInsight {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "HDInsight";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {HDInsightProperties} [properties]
   */
  properties?: HDInsightProperties;
}

/**
 * @interface
 * An interface representing DataFactory.
 * A DataFactory compute.
 *
 */
export interface DataFactory {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "DataFactory";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
}

/**
 * @interface
 * An interface representing DatabricksProperties.
 */
export interface DatabricksProperties {
  /**
   * @member {string} [databricksAccessToken] Databricks access token
   */
  databricksAccessToken?: string;
}

/**
 * @interface
 * An interface representing Databricks.
 * A DataFactory compute.
 *
 */
export interface Databricks {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "Databricks";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {DatabricksProperties} [properties]
   */
  properties?: DatabricksProperties;
}

/**
 * @interface
 * An interface representing DataLakeAnalyticsProperties.
 */
export interface DataLakeAnalyticsProperties {
  /**
   * @member {string} [dataLakeStoreAccountName] DataLake Store Account Name
   */
  dataLakeStoreAccountName?: string;
}

/**
 * @interface
 * An interface representing DataLakeAnalytics.
 * A DataLakeAnalytics compute.
 *
 */
export interface DataLakeAnalytics {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "DataLakeAnalytics";
  /**
   * @member {string} [computeLocation] Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provision state of the
   * cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and
   * Failed. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [description] The description of the Machine Learning
   * compute.
   */
  description?: string;
  /**
   * @member {Date} [createdOn] The date and time when the compute was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [modifiedOn] The date and time when the compute was last
   * modified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly modifiedOn?: Date;
  /**
   * @member {string} [resourceId] ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * @member {MachineLearningServiceError[]} [provisioningErrors] Errors during
   * provisioning
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * @member {boolean} [isAttachedCompute] Indicating whether the compute was
   * provisioned by user and brought from outside if true, or machine learning
   * service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * @member {DataLakeAnalyticsProperties} [properties]
   */
  properties?: DataLakeAnalyticsProperties;
}

/**
 * @interface
 * An interface representing ServicePrincipalCredentials.
 * Service principal credentials.
 *
 */
export interface ServicePrincipalCredentials {
  /**
   * @member {string} clientId Client Id
   */
  clientId: string;
  /**
   * @member {string} clientSecret Client secret
   */
  clientSecret: string;
}

/**
 * @interface
 * An interface representing ClusterUpdateParameters.
 * AmlCompute update parameters.
 *
 */
export interface ClusterUpdateParameters {
  /**
   * @member {ScaleSettings} [scaleSettings] Scale settings. Desired scale
   * settings for the amlCompute.
   */
  scaleSettings?: ScaleSettings;
}

/**
 * Contains the possible cases for ComputeNodesInformation.
 */
export type ComputeNodesInformationUnion = ComputeNodesInformation | AmlComputeNodesInformation;

/**
 * @interface
 * An interface representing ComputeNodesInformation.
 * Compute nodes information related to a Machine Learning compute. Might
 * differ for every type of compute.
 *
 */
export interface ComputeNodesInformation {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "ComputeNodesInformation";
  /**
   * @member {string} [nextLink] The continuation token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing AmlComputeNodeInformation.
 * Compute node information related to a AmlCompute.
 *
 */
export interface AmlComputeNodeInformation {
  /**
   * @member {string} [nodeId] Node ID. ID of the compute node.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nodeId?: string;
  /**
   * @member {string} [ipAddress] IP address. Public IP address of the compute
   * node.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipAddress?: string;
  /**
   * @member {number} [port] Port. SSH port number of the node.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly port?: number;
}

/**
 * @interface
 * An interface representing AmlComputeNodesInformation.
 * Compute node information related to a AmlCompute.
 *
 */
export interface AmlComputeNodesInformation {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "AmlCompute";
  /**
   * @member {string} [nextLink] The continuation token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
  /**
   * @member {AmlComputeNodeInformation[]} [nodes] The collection of returned
   * AmlCompute nodes details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nodes?: AmlComputeNodeInformation[];
}

/**
 * Contains the possible cases for ComputeSecrets.
 */
export type ComputeSecretsUnion = ComputeSecrets | AksComputeSecrets | VirtualMachineSecrets | DatabricksComputeSecrets;

/**
 * @interface
 * An interface representing ComputeSecrets.
 * Secrets related to a Machine Learning compute. Might differ for every type
 * of compute.
 *
 */
export interface ComputeSecrets {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "ComputeSecrets";
}

/**
 * @interface
 * An interface representing AksComputeSecrets.
 * Secrets related to a Machine Learning compute based on AKS.
 *
 */
export interface AksComputeSecrets {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * @member {string} [userKubeConfig] Content of kubeconfig file that can be
   * used to connect to the Kubernetes cluster.
   */
  userKubeConfig?: string;
  /**
   * @member {string} [adminKubeConfig] Content of kubeconfig file that can be
   * used to connect to the Kubernetes cluster.
   */
  adminKubeConfig?: string;
  /**
   * @member {string} [imagePullSecretName] Image registry pull secret.
   */
  imagePullSecretName?: string;
}

/**
 * @interface
 * An interface representing VirtualMachineSecrets.
 * Secrets related to a Machine Learning compute based on AKS.
 *
 */
export interface VirtualMachineSecrets {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "VirtualMachine";
  /**
   * @member {VirtualMachineSshCredentials} [administratorAccount] Admin
   * credentials for virtual machine.
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * @interface
 * An interface representing DatabricksComputeSecrets.
 * Secrets related to a Machine Learning compute based on Databricks.
 *
 */
export interface DatabricksComputeSecrets {
  /**
   * @member {string} computeType Polymorphic Discriminator
   */
  computeType: "Databricks";
  /**
   * @member {string} [databricksAccessToken] access token for databricks
   * account.
   */
  databricksAccessToken?: string;
}

/**
 * @interface
 * An interface representing WorkspacesListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkspacesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skiptoken] Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * @interface
 * An interface representing WorkspacesListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkspacesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skiptoken] Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * @interface
 * An interface representing MachineLearningComputeListByWorkspaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MachineLearningComputeListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skiptoken] Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * @interface
 * An interface representing AzureMachineLearningWorkspacesOptions.
 * @extends AzureServiceClientOptions
 */
export interface AzureMachineLearningWorkspacesOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing MachineLearningComputeCreateOrUpdateHeaders.
 * Defines headers for CreateOrUpdate operation.
 *
 */
export interface MachineLearningComputeCreateOrUpdateHeaders {
  /**
   * @member {string} [azureAsyncOperation] URI to poll for asynchronous
   * operation status.
   */
  azureAsyncOperation: string;
}

/**
 * @interface
 * An interface representing MachineLearningComputeDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface MachineLearningComputeDeleteHeaders {
  /**
   * @member {string} [azureAsyncOperation] URI to poll for asynchronous
   * operation status.
   */
  azureAsyncOperation: string;
  /**
   * @member {string} [location] URI to poll for asynchronous operation result.
   */
  location: string;
}


/**
 * @interface
 * An interface representing the OperationListResult.
 * An array of operations supported by the resource provider.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
}

/**
 * @interface
 * An interface representing the WorkspaceListResult.
 * The result of a request to list machine learning workspaces.
 *
 * @extends Array<Workspace>
 */
export interface WorkspaceListResult extends Array<Workspace> {
  /**
   * @member {string} [nextLink] The URI that can be used to request the next
   * list of machine learning workspaces.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ListUsagesResult.
 * The List Usages operation response.
 *
 * @extends Array<Usage>
 */
export interface ListUsagesResult extends Array<Usage> {
  /**
   * @member {string} [nextLink] The URI to fetch the next page of AML resource
   * usage information. Call ListNext() with this to fetch the next page of AML
   * resource usage information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the VirtualMachineSizeListResult.
 * The List Virtual Machine size operation response.
 *
 * @extends Array<VirtualMachineSize>
 */
export interface VirtualMachineSizeListResult extends Array<VirtualMachineSize> {
  /**
   * @member {VirtualMachineSize[]} [amlCompute] The list of virtual machine
   * sizes supported by AmlCompute.
   */
  amlCompute?: VirtualMachineSize[];
}

/**
 * @interface
 * An interface representing the PaginatedComputeResourcesList.
 * Paginated list of Machine Learning compute objects wrapped in ARM resource
 * envelope.
 *
 * @extends Array<ComputeResource>
 */
export interface PaginatedComputeResourcesList extends Array<ComputeResource> {
  /**
   * @member {string} [nextLink] A continuation link (absolute URI) to the next
   * page of results in the list.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
 * 'Succeeded', 'Failed', 'Canceled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProvisioningState =
 * <ProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ProvisioningState {
  Unknown = 'Unknown',
  Updating = 'Updating',
  Creating = 'Creating',
  Deleting = 'Deleting',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
  Canceled = 'Canceled',
}

/**
 * Defines values for UsageUnit.
 * Possible values include: 'Count'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: UsageUnit = <UsageUnit>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum UsageUnit {
  Count = 'Count',
}

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export enum ResourceIdentityType {
  SystemAssigned = 'SystemAssigned',
}

/**
 * Defines values for VmPriority.
 * Possible values include: 'Dedicated', 'LowPriority'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VmPriority = <VmPriority>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum VmPriority {
  Dedicated = 'Dedicated',
  LowPriority = 'LowPriority',
}

/**
 * Defines values for AllocationState.
 * Possible values include: 'Steady', 'Resizing'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: AllocationState =
 * <AllocationState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum AllocationState {
  Steady = 'Steady',
  Resizing = 'Resizing',
}

/**
 * Defines values for ComputeType.
 * Possible values include: 'AKS', 'AmlCompute', 'DataFactory',
 * 'VirtualMachine', 'HDInsight', 'Databricks', 'DataLakeAnalytics'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ComputeType =
 * <ComputeType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ComputeType {
  AKS = 'AKS',
  AmlCompute = 'AmlCompute',
  DataFactory = 'DataFactory',
  VirtualMachine = 'VirtualMachine',
  HDInsight = 'HDInsight',
  Databricks = 'Databricks',
  DataLakeAnalytics = 'DataLakeAnalytics',
}

/**
 * Defines values for UnderlyingResourceAction.
 * Possible values include: 'Delete', 'Detach'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: UnderlyingResourceAction =
 * <UnderlyingResourceAction>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum UnderlyingResourceAction {
  Delete = 'Delete',
  Detach = 'Detach',
}

/**
 * Defines values for Status.
 * Possible values include: 'Disabled', 'Enabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Status = <Status>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Status {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type WorkspacesListKeysResponse = ListWorkspaceKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListWorkspaceKeysResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkspacesListBySubscriptionResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineSizesListResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineSizeListResult;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type MachineLearningComputeListByWorkspaceResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedComputeResourcesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MachineLearningComputeGetResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MachineLearningComputeCreateOrUpdateResponse = ComputeResource & MachineLearningComputeCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachineLearningComputeCreateOrUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MachineLearningComputeUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type MachineLearningComputeDeleteResponse = MachineLearningComputeDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachineLearningComputeDeleteHeaders;
    };
};

/**
 * Contains response data for the listNodes operation.
 */
export type MachineLearningComputeListNodesResponse = ComputeNodesInformationUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeNodesInformationUnion;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type MachineLearningComputeListKeysResponse = ComputeSecretsUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeSecretsUnion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type MachineLearningComputeBeginUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type MachineLearningComputeListByWorkspaceNextResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedComputeResourcesList;
    };
};

/**
 * Contains response data for the listNodesNext operation.
 */
export type MachineLearningComputeListNodesNextResponse = ComputeNodesInformationUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeNodesInformationUnion;
    };
};

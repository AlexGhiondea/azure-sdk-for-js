/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Sku.
 * The SKU of the cognitive services account.
 *
 */
export interface Sku {
  /**
   * @member {SkuName} name Gets or sets the sku name. Required for account
   * creation, optional for update. Possible values include: 'F0', 'P0', 'P1',
   * 'P2', 'S0', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6'
   */
  name: SkuName;
  /**
   * @member {SkuTier} [tier] Gets the sku tier. This is based on the SKU name.
   * Possible values include: 'Free', 'Standard', 'Premium'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tier?: SkuTier;
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountCreateParameters.
 * The parameters to provide for the account.
 *
 */
export interface CognitiveServicesAccountCreateParameters {
  /**
   * @member {Sku} sku
   */
  sku: Sku;
  /**
   * @member {Kind} kind Required. Indicates the type of cognitive service
   * account. Possible values include: 'Academic', 'Bing.Autosuggest',
   * 'Bing.Search', 'Bing.Speech', 'Bing.SpellCheck', 'ComputerVision',
   * 'ContentModerator', 'Emotion', 'Face', 'LUIS', 'Recommendations',
   * 'SpeakerRecognition', 'Speech', 'SpeechTranslation', 'TextAnalytics',
   * 'TextTranslation', 'WebLM'
   */
  kind: Kind;
  /**
   * @member {string} location Required. Gets or sets the location of the
   * resource. This will be one of the supported and registered Azure Geo
   * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
   * resource cannot be changed once it is created, but if an identical geo
   * region is specified on update the request will succeed.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {any} properties Must exist in the request. Must not be null.
   */
  properties: any;
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountUpdateParameters.
 * The parameters to provide for the account.
 *
 */
export interface CognitiveServicesAccountUpdateParameters {
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CognitiveServicesAccount.
 * Cognitive Services Account is an Azure resource representing the provisioned
 * account, its type, location and SKU.
 *
 * @extends BaseResource
 */
export interface CognitiveServicesAccount extends BaseResource {
  /**
   * @member {string} [etag] Entity Tag
   */
  etag?: string;
  /**
   * @member {string} [id] The id of the created account
   */
  id?: string;
  /**
   * @member {string} [kind] Type of cognitive service account.
   */
  kind?: string;
  /**
   * @member {string} [location] The location of the resource
   */
  location?: string;
  /**
   * @member {string} [name] The name of the created account
   */
  name?: string;
  /**
   * @member {ProvisioningState} [provisioningState] Gets the status of the
   * cognitive services account at the time the operation was called. Possible
   * values include: 'Creating', 'ResolvingDNS', 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [endpoint] Endpoint of the created account
   */
  endpoint?: string;
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [type] Resource type
   */
  type?: string;
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountKeys.
 * The access keys for the cognitive services account.
 *
 */
export interface CognitiveServicesAccountKeys {
  /**
   * @member {string} [key1] Gets the value of key 1.
   */
  key1?: string;
  /**
   * @member {string} [key2] Gets the value of key 2.
   */
  key2?: string;
}

/**
 * @interface
 * An interface representing RegenerateKeyParameters.
 * Regenerate key parameters.
 *
 */
export interface RegenerateKeyParameters {
  /**
   * @member {KeyName} [keyName] key name to generate (Key1|Key2). Possible
   * values include: 'Key1', 'Key2'
   */
  keyName?: KeyName;
}

/**
 * @interface
 * An interface representing CognitiveServicesResourceAndSku.
 */
export interface CognitiveServicesResourceAndSku {
  /**
   * @member {string} [resourceType] Resource Namespace and Type
   */
  resourceType?: string;
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountEnumerateSkusResult.
 * The list of cognitive services accounts operation response.
 *
 */
export interface CognitiveServicesAccountEnumerateSkusResult {
  /**
   * @member {CognitiveServicesResourceAndSku[]} [value] Gets the list of
   * Cognitive Services accounts and their properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: CognitiveServicesResourceAndSku[];
}

/**
 * @interface
 * An interface representing ErrorBody.
 */
export interface ErrorBody {
  /**
   * @member {string} code error code
   */
  code: string;
  /**
   * @member {string} message error message
   */
  message: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {ErrorBody} [error]
   */
  error?: ErrorBody;
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountsUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CognitiveServicesAccountsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CognitiveServicesAccountsRegenerateKeyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CognitiveServicesAccountsRegenerateKeyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {KeyName} [keyName] key name to generate (Key1|Key2). Possible
   * values include: 'Key1', 'Key2'
   */
  keyName?: KeyName;
}

/**
 * @interface
 * An interface representing CognitiveServicesManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface CognitiveServicesManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the CognitiveServicesAccountListResult.
 * The list of cognitive services accounts operation response.
 *
 * @extends Array<CognitiveServicesAccount>
 */
export interface CognitiveServicesAccountListResult extends Array<CognitiveServicesAccount> {
}

/**
 * Defines values for SkuName.
 * Possible values include: 'F0', 'P0', 'P1', 'P2', 'S0', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'F0' | 'P0' | 'P1' | 'P2' | 'S0' | 'S1' | 'S2' | 'S3' | 'S4' | 'S5' | 'S6';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Free', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Free' | 'Standard' | 'Premium';

/**
 * Defines values for Kind.
 * Possible values include: 'Academic', 'Bing.Autosuggest', 'Bing.Search', 'Bing.Speech',
 * 'Bing.SpellCheck', 'ComputerVision', 'ContentModerator', 'Emotion', 'Face', 'LUIS',
 * 'Recommendations', 'SpeakerRecognition', 'Speech', 'SpeechTranslation', 'TextAnalytics',
 * 'TextTranslation', 'WebLM'
 * @readonly
 * @enum {string}
 */
export type Kind = 'Academic' | 'Bing.Autosuggest' | 'Bing.Search' | 'Bing.Speech' | 'Bing.SpellCheck' | 'ComputerVision' | 'ContentModerator' | 'Emotion' | 'Face' | 'LUIS' | 'Recommendations' | 'SpeakerRecognition' | 'Speech' | 'SpeechTranslation' | 'TextAnalytics' | 'TextTranslation' | 'WebLM';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'ResolvingDNS', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'ResolvingDNS' | 'Succeeded' | 'Failed';

/**
 * Defines values for KeyName.
 * Possible values include: 'Key1', 'Key2'
 * @readonly
 * @enum {string}
 */
export type KeyName = 'Key1' | 'Key2';

/**
 * Contains response data for the create operation.
 */
export type CognitiveServicesAccountsCreateResponse = CognitiveServicesAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type CognitiveServicesAccountsUpdateResponse = CognitiveServicesAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccount;
    };
};

/**
 * Contains response data for the getProperties operation.
 */
export type CognitiveServicesAccountsGetPropertiesResponse = CognitiveServicesAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccount;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type CognitiveServicesAccountsListByResourceGroupResponse = CognitiveServicesAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccountListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CognitiveServicesAccountsListResponse = CognitiveServicesAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccountListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type CognitiveServicesAccountsListKeysResponse = CognitiveServicesAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccountKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type CognitiveServicesAccountsRegenerateKeyResponse = CognitiveServicesAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccountKeys;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type CognitiveServicesAccountsListSkusResponse = CognitiveServicesAccountEnumerateSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CognitiveServicesAccountEnumerateSkusResult;
    };
};

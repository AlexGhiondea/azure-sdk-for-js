/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing OperationDisplay.
 * Display metadata associated with the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: OperationalInsights.
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed
   * etc.
   */
  resource?: string;
  /**
   * @member {string} [operation] Type of operation: get, read, delete, etc.
   */
  operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Supported operation of OperationalInsights resource provider.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] Display metadata associated with the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing OperationListResult.
 * Result of the request to list OperationalInsights operations.
 *
 */
export interface OperationListResult {
  /**
   * @member {Operation[]} [value] List of operations supported by the
   * OperationalInsights resource provider.
   */
  value?: Operation[];
}

/**
 * @interface
 * An interface representing LinkTarget.
 * Metadata for a workspace that isn't linked to an Azure subscription.
 *
 */
export interface LinkTarget {
  /**
   * @member {string} [customerId] The GUID that uniquely identifies the
   * workspace.
   */
  customerId?: string;
  /**
   * @member {string} [displayName] The display name of the workspace.
   */
  displayName?: string;
  /**
   * @member {string} [workspaceName] The DNS valid workspace name.
   */
  workspaceName?: string;
  /**
   * @member {string} [location] The location of the workspace.
   */
  location?: string;
}

/**
 * @interface
 * An interface representing Tag.
 * A tag of a saved search.
 *
 */
export interface Tag {
  /**
   * @member {string} name The tag name.
   */
  name: string;
  /**
   * @member {string} value The tag value.
   */
  value: string;
}

/**
 * @interface
 * An interface representing CoreSummary.
 * The core summary of a search.
 *
 */
export interface CoreSummary {
  /**
   * @member {string} [status] The status of a core summary.
   */
  status?: string;
  /**
   * @member {number} numberOfDocuments The number of documents of a core
   * summary.
   */
  numberOfDocuments: number;
}

/**
 * @interface
 * An interface representing SearchSort.
 * The sort parameters for search.
 *
 */
export interface SearchSort {
  /**
   * @member {string} [name] The name of the field the search query is sorted
   * on.
   */
  name?: string;
  /**
   * @member {SearchSortEnum} [order] The sort order of the search. Possible
   * values include: 'asc', 'desc'
   */
  order?: SearchSortEnum;
}

/**
 * @interface
 * An interface representing SearchMetadataSchema.
 * Schema metadata for search.
 *
 */
export interface SearchMetadataSchema {
  /**
   * @member {string} [name] The name of the metadata schema.
   */
  name?: string;
  /**
   * @member {number} [version] The version of the metadata schema.
   */
  version?: number;
}

/**
 * @interface
 * An interface representing SearchMetadata.
 * Metadata for search results.
 *
 */
export interface SearchMetadata {
  /**
   * @member {string} [searchId] The request id of the search.
   */
  searchId?: string;
  /**
   * @member {string} [resultType] The search result type.
   */
  resultType?: string;
  /**
   * @member {number} [total] The total number of search results.
   */
  total?: number;
  /**
   * @member {number} [top] The number of top search results.
   */
  top?: number;
  /**
   * @member {string} [id] The id of the search results request.
   */
  id?: string;
  /**
   * @member {CoreSummary[]} [coreSummaries] The core summaries.
   */
  coreSummaries?: CoreSummary[];
  /**
   * @member {string} [status] The status of the search results.
   */
  status?: string;
  /**
   * @member {Date} [startTime] The start time for the search.
   */
  startTime?: Date;
  /**
   * @member {Date} [lastUpdated] The time of last update.
   */
  lastUpdated?: Date;
  /**
   * @member {string} [eTag] The ETag of the search results.
   */
  eTag?: string;
  /**
   * @member {SearchSort[]} [sort] How the results are sorted.
   */
  sort?: SearchSort[];
  /**
   * @member {number} [requestTime] The request time.
   */
  requestTime?: number;
  /**
   * @member {string} [aggregatedValueField] The aggregated value field.
   */
  aggregatedValueField?: string;
  /**
   * @member {string} [aggregatedGroupingFields] The aggregated grouping
   * fields.
   */
  aggregatedGroupingFields?: string;
  /**
   * @member {number} [sum] The sum of all aggregates returned in the result
   * set.
   */
  sum?: number;
  /**
   * @member {number} [max] The max of all aggregates returned in the result
   * set.
   */
  max?: number;
  /**
   * @member {SearchMetadataSchema} [schema] The schema.
   */
  schema?: SearchMetadataSchema;
}

/**
 * @interface
 * An interface representing SavedSearch.
 * Value object for saved search results.
 *
 * @extends BaseResource
 */
export interface SavedSearch extends BaseResource {
  /**
   * @member {string} [id] The id of the saved search.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the saved search.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the saved search.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [eTag] The ETag of the saved search.
   */
  eTag?: string;
  /**
   * @member {string} category The category of the saved search. This helps the
   * user to find a saved search faster.
   */
  category: string;
  /**
   * @member {string} displayName Saved search display name.
   */
  displayName: string;
  /**
   * @member {string} query The query expression for the saved search. Please
   * see
   * https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference
   * for reference.
   */
  query: string;
  /**
   * @member {number} [version] The version number of the query lanuage. The
   * current version is 2 and is the default.
   */
  version?: number;
  /**
   * @member {Tag[]} [tags] The tags attached to the saved search.
   */
  tags?: Tag[];
}

/**
 * @interface
 * An interface representing SavedSearchesListResult.
 * The saved search list operation response.
 *
 */
export interface SavedSearchesListResult {
  /**
   * @member {SearchMetadata} [metadata] The metadata from search results.
   */
  metadata?: SearchMetadata;
  /**
   * @member {SavedSearch[]} [value] The array of result values.
   */
  value?: SavedSearch[];
}

/**
 * @interface
 * An interface representing SearchError.
 * Details for a search error.
 *
 */
export interface SearchError {
  /**
   * @member {string} [type] The error type.
   */
  type?: string;
  /**
   * @member {string} [message] The error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing SearchResultsResponse.
 * The get search result operation response.
 *
 */
export interface SearchResultsResponse {
  /**
   * @member {string} [id] The id of the search, which includes the full url.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {SearchMetadata} [metadata] The metadata from search results.
   */
  metadata?: SearchMetadata;
  /**
   * @member {any[]} [value] The array of result values.
   */
  value?: any[];
  /**
   * @member {SearchError} [error] The error.
   */
  error?: SearchError;
}

/**
 * @interface
 * An interface representing SearchSchemaValue.
 * Value object for schema results.
 *
 */
export interface SearchSchemaValue {
  /**
   * @member {string} [name] The name of the schema.
   */
  name?: string;
  /**
   * @member {string} [displayName] The display name of the schema.
   */
  displayName?: string;
  /**
   * @member {string} [type] The type.
   */
  type?: string;
  /**
   * @member {boolean} indexed The boolean that indicates the field is
   * searchable as free text.
   */
  indexed: boolean;
  /**
   * @member {boolean} stored The boolean that indicates whether or not the
   * field is stored.
   */
  stored: boolean;
  /**
   * @member {boolean} facet The boolean that indicates whether or not the
   * field is a facet.
   */
  facet: boolean;
  /**
   * @member {string[]} [ownerType] The array of workflows containing the
   * field.
   */
  ownerType?: string[];
}

/**
 * @interface
 * An interface representing SearchGetSchemaResponse.
 * The get schema operation response.
 *
 */
export interface SearchGetSchemaResponse {
  /**
   * @member {SearchMetadata} [metadata] The metadata from search results.
   */
  metadata?: SearchMetadata;
  /**
   * @member {SearchSchemaValue[]} [value] The array of result values.
   */
  value?: SearchSchemaValue[];
}

/**
 * @interface
 * An interface representing SearchHighlight.
 * Highlight details.
 *
 */
export interface SearchHighlight {
  /**
   * @member {string} [pre] The string that is put before a matched result.
   */
  pre?: string;
  /**
   * @member {string} [post] The string that is put after a matched result.
   */
  post?: string;
}

/**
 * @interface
 * An interface representing SearchParameters.
 * Parameters specifying the search query and range.
 *
 */
export interface SearchParameters {
  /**
   * @member {number} [top] The number to get from the top.
   */
  top?: number;
  /**
   * @member {SearchHighlight} [highlight] The highlight that looks for all
   * occurences of a string.
   */
  highlight?: SearchHighlight;
  /**
   * @member {string} query The query to search.
   */
  query: string;
  /**
   * @member {Date} [start] The start date filter, so the only query results
   * returned are after this date.
   */
  start?: Date;
  /**
   * @member {Date} [end] The end date filter, so the only query results
   * returned are before this date.
   */
  end?: Date;
}

/**
 * @interface
 * An interface representing StorageAccount.
 * Describes a storage account connection.
 *
 */
export interface StorageAccount {
  /**
   * @member {string} id The Azure Resource Manager ID of the storage account
   * resource.
   */
  id: string;
  /**
   * @member {string} key The storage account key.
   */
  key: string;
}

/**
 * @interface
 * An interface representing StorageInsightStatus.
 * The status of the storage insight.
 *
 */
export interface StorageInsightStatus {
  /**
   * @member {StorageInsightState} state The state of the storage insight
   * connection to the workspace. Possible values include: 'OK', 'ERROR'
   */
  state: StorageInsightState;
  /**
   * @member {string} [description] Description of the state of the storage
   * insight.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing StorageInsight.
 * The top level storage insight resource container.
 *
 * @extends BaseResource
 */
export interface StorageInsight extends BaseResource {
  /**
   * @member {string[]} [containers] The names of the blob containers that the
   * workspace should read
   */
  containers?: string[];
  /**
   * @member {string[]} [tables] The names of the Azure tables that the
   * workspace should read
   */
  tables?: string[];
  /**
   * @member {StorageAccount} storageAccount The storage account connection
   * details
   */
  storageAccount: StorageAccount;
  /**
   * @member {StorageInsightStatus} [status] The status of the storage insight
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: StorageInsightStatus;
  /**
   * @member {string} [eTag] The ETag of the storage insight.
   */
  eTag?: string;
}

/**
 * @interface
 * An interface representing Resource.
 * The resource definition.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} location Resource location
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ProxyResource.
 * Common properties of proxy resource.
 *
 */
export interface ProxyResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing WorkspacePurgeBodyFilters.
 * User-defined filters to return data which will be purged from the table.
 *
 */
export interface WorkspacePurgeBodyFilters {
  /**
   * @member {string} [column] The column of the table over which the given
   * query should run
   */
  column?: string;
  /**
   * @member {string} [operator] A query operator to evaluate over the provided
   * column and value(s).
   */
  operator?: string;
  /**
   * @member {any} [value] the value for the operator to function over. This
   * can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or
   * array of values.
   */
  value?: any;
  /**
   * @member {string} [key] When filtering over custom dimensions, this key
   * will be used as the name of the custom dimension.
   */
  key?: string;
}

/**
 * @interface
 * An interface representing WorkspacePurgeBody.
 * Describes the body of a purge request for an App Insights Workspace
 *
 */
export interface WorkspacePurgeBody {
  /**
   * @member {string} table Table from which to purge data.
   */
  table: string;
  /**
   * @member {WorkspacePurgeBodyFilters[]} filters The set of columns and
   * filters (queries) to run over them to purge the resulting data.
   */
  filters: WorkspacePurgeBodyFilters[];
}

/**
 * @interface
 * An interface representing WorkspacePurgeResponse.
 * Response containing operationId for a specific purge action.
 *
 */
export interface WorkspacePurgeResponse {
  /**
   * @member {string} operationId Id to use when querying for status for a
   * particular purge operation.
   */
  operationId: string;
}

/**
 * @interface
 * An interface representing WorkspacePurgeStatusResponse.
 * Response containing status for a specific purge operation.
 *
 */
export interface WorkspacePurgeStatusResponse {
  /**
   * @member {PurgeState} status Status of the operation represented by the
   * requested Id. Possible values include: 'pending', 'completed'
   */
  status: PurgeState;
}

/**
 * @interface
 * An interface representing SharedKeys.
 * The shared keys for a workspace.
 *
 */
export interface SharedKeys {
  /**
   * @member {string} [primarySharedKey] The primary shared key of a workspace.
   */
  primarySharedKey?: string;
  /**
   * @member {string} [secondarySharedKey] The secondary shared key of a
   * workspace.
   */
  secondarySharedKey?: string;
}

/**
 * @interface
 * An interface representing OperationalInsightsManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface OperationalInsightsManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing WorkspacesPurgeHeaders.
 * Defines headers for Purge operation.
 *
 */
export interface WorkspacesPurgeHeaders {
  /**
   * @member {string} [xMsStatusLocation] The location from which to request
   * the operation status.
   */
  xMsStatusLocation: string;
}


/**
 * @interface
 * An interface representing the StorageInsightListResult.
 * The list storage insights operation response.
 *
 * @extends Array<StorageInsight>
 */
export interface StorageInsightListResult extends Array<StorageInsight> {
  /**
   * @member {string} [odataNextLink] The link (url) to the next page of
   * results.
   */
  odataNextLink?: string;
}

/**
 * Defines values for SearchSortEnum.
 * Possible values include: 'asc', 'desc'
 * @readonly
 * @enum {string}
 */
export type SearchSortEnum = 'asc' | 'desc';

/**
 * Defines values for StorageInsightState.
 * Possible values include: 'OK', 'ERROR'
 * @readonly
 * @enum {string}
 */
export type StorageInsightState = 'OK' | 'ERROR';

/**
 * Defines values for PurgeState.
 * Possible values include: 'pending', 'completed'
 * @readonly
 * @enum {string}
 */
export type PurgeState = 'pending' | 'completed';

/**
 * Contains response data for the createOrUpdate operation.
 */
export type StorageInsightsCreateOrUpdateResponse = StorageInsight & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageInsight;
    };
};

/**
 * Contains response data for the get operation.
 */
export type StorageInsightsGetResponse = StorageInsight & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageInsight;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type StorageInsightsListByWorkspaceResponse = StorageInsightListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageInsightListResult;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type StorageInsightsListByWorkspaceNextResponse = StorageInsightListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageInsightListResult;
    };
};

/**
 * Contains response data for the listLinkTargets operation.
 */
export type WorkspacesListLinkTargetsResponse = Array<LinkTarget> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LinkTarget[];
    };
};

/**
 * Contains response data for the getSchema operation.
 */
export type WorkspacesGetSchemaResponse = SearchGetSchemaResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchGetSchemaResponse;
    };
};

/**
 * Contains response data for the getSearchResults operation.
 */
export type WorkspacesGetSearchResultsResponse = SearchResultsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResultsResponse;
    };
};

/**
 * Contains response data for the updateSearchResults operation.
 */
export type WorkspacesUpdateSearchResultsResponse = SearchResultsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResultsResponse;
    };
};

/**
 * Contains response data for the purge operation.
 */
export type WorkspacesPurgeResponse = WorkspacePurgeResponse & WorkspacesPurgeHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkspacesPurgeHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspacePurgeResponse;
    };
};

/**
 * Contains response data for the getPurgeStatus operation.
 */
export type WorkspacesGetPurgeStatusResponse = WorkspacePurgeStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspacePurgeStatusResponse;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type WorkspacesListKeysResponse = SharedKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedKeys;
    };
};

/**
 * Contains response data for the regenerateSharedKeys operation.
 */
export type WorkspacesRegenerateSharedKeysResponse = SharedKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedKeys;
    };
};

/**
 * Contains response data for the beginGetSearchResults operation.
 */
export type WorkspacesBeginGetSearchResultsResponse = SearchResultsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResultsResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SavedSearchesCreateOrUpdateResponse = SavedSearch & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SavedSearch;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SavedSearchesGetResponse = SavedSearch & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SavedSearch;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type SavedSearchesListByWorkspaceResponse = SavedSearchesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SavedSearchesListResult;
    };
};

/**
 * Contains response data for the getResults operation.
 */
export type SavedSearchesGetResultsResponse = SearchResultsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResultsResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
